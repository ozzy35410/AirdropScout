import React from 'react'; import { NFTCard } from './NFTCard'; import { NFT, NetworkConfigs } from '../../types'; import { Loader2, Database, Wallet } from 'lucide-react'; import { useTranslation } from '../../lib/i18n'; interface NFTGridProps { nfts: NFT[]; networks: NetworkConfigs; loading: boolean; error: string | null; walletAddress: string; hideOwned: boolean; language: 'en' | 'tr'; } export function NFTGrid({ nfts, networks, loading, error, walletAddress, hideOwned, language }: NFTGridProps) { const { t } = useTranslation(language); if (loading) { return ( <div className="flex items-center justify-center py-16"> <div className="text-center"> <Loader2 className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-4" /> <p className="text-gray-600">{t('loading_nfts')}</p> {walletAddress && hideOwned && ( <p className="text-sm text-gray-500 mt-2">{t('checking_ownership')}</p> )} </div> </div> ); } if (error) { return ( <div className="text-center py-16"> <div className="bg-red-50 border border-red-200 rounded-lg p-6 max-w-md mx-auto"> <h3 className="text-lg font-semibold text-red-800 mb-2">{t('error_loading_nfts')}</h3> <p className="text-red-600">{error}</p> </div> </div> ); } if (nfts.length === 0) { return ( <div className="text-center py-16"> <div className="max-w-md mx-auto"> {walletAddress && hideOwned ? ( <> <Wallet className="w-16 h-16 text-gray-400 mx-auto mb-4" /> <h3 className="text-xl font-semibold text-gray-900 mb-2">{t('all_nfts_filtered')}</h3> <p className="text-gray-600"> {t('already_own_nfts')} </p> </> ) : ( <> <Database className="w-16 h-16 text-gray-400 mx-auto mb-4" /> <h3 className="text-xl font-semibold text-gray-900 mb-2">{t('no_nfts_available')}</h3> <p className="text-gray-600"> {t('no_nfts_listed')} </p> </> )} </div> </div> ); } return ( <> <div className="flex items-center justify-between mb-6"> <p className="text-gray-600"> {t('showing_nfts')} {nfts.length} NFT{nfts.length !== 1 ? 's' : ''} {walletAddress && hideOwned && ( <span className="text-blue-600 ml-1">{t('filtered_by_wallet')}</span> )} </p> </div> <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"> {nfts.map((nft) => ( <NFTCard key={nft.id} nft={nft} networks={networks} /> ))} </div> </> ); }